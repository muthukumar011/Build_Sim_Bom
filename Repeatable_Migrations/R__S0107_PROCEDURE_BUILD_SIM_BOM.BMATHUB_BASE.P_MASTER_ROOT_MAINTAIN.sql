CREATE OR REPLACE PROCEDURE "P_MASTER_ROOT_MAINTAIN"()
RETURNS VARCHAR(50)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN 
MERGE INTO BUILD_SIM_BOM.BMATHUB_BASE.T_ITEM_DETAIL_ROOT AS target 
  USING (
    SELECT 
    DISTINCT 
      ITEM_ID,
      ITEM_CLASS_NM,
      ITEM_DSC,
      DELETE_IND 
    FROM 
      BUILD_SIM_BOM.MASTER_DATA.ITEM
  ) AS source 
  ON (target.ITEM_ID = source.ITEM_ID) 
  WHEN MATCHED THEN 
UPDATE 
SET 
  target.ITEM_CLASS_NM = source.ITEM_CLASS_NM, 
  target.ITEM_DSC = source.ITEM_DSC, 
  target.DELETE_IND = source.DELETE_IND WHEN NOT MATCHED THEN INSERT (
    ITEM_ID, ITEM_CLASS_NM, ITEM_DSC, 
    DELETE_IND
  ) 
VALUES 
  (
    source.ITEM_ID, source.ITEM_CLASS_NM, 
    source.ITEM_DSC, source.DELETE_IND
  );

MERGE INTO BUILD_SIM_BOM.BMATHUB_BASE.T_LOCATION_ROOT AS target 
  USING (
    SELECT 
    DISTINCT
      ITEM_ID,
      ITEM_CLASS_NM,
      LOCATION_ID
  FROM
    BUILD_SIM_BOM.MASTER_DATA.LOCATION
  ) AS source 
  ON (target.LOCATION_ID = LOCATION._ID)
  WHEN MATCHED THEN 
UPDATE 
SET 
  target.ITEM_CLASS_NM = source.ITEM_CLASS_NM, 
  target.LOCATION_ID = source.LOCATION_ID WHEN NOT MATCHED THEN INSERT (
    ITEM_ID, ITEM_CLASS_NM, LOCATION_ID
  ) 
VALUES 
  (
    source.ITEM_ID, source.ITEM_CLASS_NM, 
    source.LOCATION_ID
  );

MERGE INTO BUILD_SIM_BOM.BMATHUB_BASE.T_ORIG_BOM AS target 
  USING (
    SELECT 
    DISTINCT
      INPUT_ITEM_ID,
      ITEM_CLASS_NM,
      OUTPUT_ITEM_ID,
      LOC
  FROM
    BUILD_SIM_BOM.MASTER_DATA.ORIG_BOM
  ) AS source 
  ON (target.INPUT_ITEM_ID = source.INPUT_ITEM_ID) 
  WHEN MATCHED THEN 
UPDATE 
SET 
  target.ITEM_CLASS_NM = source.ITEM_CLASS_NM, 
  target.OUTPUT_ITEM_ID = source.OUTPUT_ITEM_ID, 
  target.LOC = source.LOC WHEN NOT MATCHED THEN INSERT (
    INPUT_ITEM_ID, ITEM_CLASS_NM, OUTPUT_ITEM_ID, 
    LOC
  ) 
VALUES 
  (
    source.INPUT_ITEM_ID, source.ITEM_CLASS_NM, 
    source.OUTPUT_ITEM_ID, source.LOC
  );

RETURN ''Data loaded successfully.'';
END;
';











